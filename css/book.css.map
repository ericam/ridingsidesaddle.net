{"version":3,"sources":["book.css","../bower_components/accoutrement-reset/sass/_reset.scss","../bower_components/accoutrement-fonts/sass/_fonts.scss","base/_fonts.config.scss","../bower_components/accoutrement-layout/sass/_layout.scss","base/_base.scss","../bower_components/accoutrement-scale/sass/_scale.scss","components/_splash.scss"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;IAsBG;ACb0a;EAN3a,WAAQ;EACR,YAAS;EACT,WAAQ;EAkBR,eAAM;EACK,iBAAA;EACK,0BAAA,EAAA;;AAGlB;EAGE,gBAAa,EAAA;;AAGf;EAEc,kBAAA,EAAA;;AAGd;EACE,2BAAiB;EACD,mBAAA,EAAA;;AAGT;EAGK,kBAAA;EACC,qBAAA;EACG,wBAAA,EAAA;;AAGf;EAED,cAAQ,EAAA;EAAV;IAGa,aAAA;IACA,eAAA,EAAA;;AAIX;EACS,cAAA,EAAA;;AAGK;EAEL,gBAAA,EAAA;;ADVX;EEjCiB,yBAAA;EACD,oBAAA;EACC,qBAAA;;EASb,iPAAK,EAAA;;AF6BT;EExCI,yBAAa;EACb,oBAAY;EACZ,mBAAa;;EASb,wOAAK,EAAA;;AFoCT;EE/CiB,yBAAA;EACD,oBAAA;EACC,qBAAA;;EASR,8OAAA,EAAA;;AF2CT;EEtDI,yBAAa;EACb,oBAAY;EACZ,mBAAa;;EASR,0PAAA,EAAA;;AFkDT;EE7DiB,2BAAA;EACb,oBAAY;EACZ,qBAAa;;EASb,2OAAK,EAAA;;AFyDT;EEpEI,2BAAa;EACb,oBAAY;EACC,mBAAA;;EASR,kOAAA,EAAA;;AFgET;EE3EiB,2BAAA;EACD,oBAAA;EACZ,qBAAa;;EASb,wOAAK,EAAA;;AFuET;EElFI,2BAAa;EACb,oBAAY;EACZ,mBAAa;;EASR,oPAAA,EAAA;;ACIF;EACD,2EAAa,EAAA;;ACXhB;EAIG,wBAAA,EAAA;;ACvBN;EC0FE,iBAAW;EACX,oBAAa;EDxFb,kBEiBW;EAAA,aAAA,EAAA;;AFbP;EAEI,cAAA,EAAA;;AEnBV;EACE,6BAAa;EAAb,wBAAa;EAAb,qBAAa;EACwB,8DAAA;EACpB,wBAAA;EACR,uBAAA;EAAA,sBAAA;EAAA,eAAA;EACO,gCAAA;EAAA,4BAAA;EAAA,wBAAA;EAChB,iCAAiB;EAAjB,uBAAiB;EAAjB,yBAAiB,EAAA;EAAnB;IAGI,uCAAY;IACJ,cAAA;IACC,eAAA;IACT,oBAAY;IACZ,2BAAa,EAAA;EACjB;IAGI,aAoBS;IAnBT,kBAAW;IACE,oBAAA;IACL,WAAA,EAAA;EACJ;IAGI,WAAA,EAAA;EAGH;IAGH,aAAO;IACP,mBAAa,EAAA;EACX;IAKF,aAAO,EAAA","file":"book.css","sourcesContent":["/*!\n * Web Fonts from fontspring.com\n *\n * All OpenType features and all extended glyphs have been removed.\n * Fully installable fonts can be purchased at http://www.fontspring.com\n *\n * The fonts included in this stylesheet are subject to the End User License you purchased\n * from Fontspring. The fonts are protected under domestic and international trademark and\n * copyright law. You are prohibited from modifying, reverse engineering, duplicating, or\n * distributing this font software.\n *\n * (c) 2010-2015 Fontspring\n *\n *\n *\n *\n * The fonts included are copyrighted by the vendor listed below.\n *\n * Vendor:      FontSite Inc.\n * License URL: http://www.fontspring.com/licenses/fontsite/webfont\n *\n *\n */\nhtml, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font: inherit;\n  font-size: 100%;\n  vertical-align: baseline; }\n\nhtml {\n  line-height: 1; }\n\nol, ul {\n  list-style: none; }\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0; }\n\ncaption, th, td {\n  text-align: left;\n  font-weight: normal;\n  vertical-align: middle; }\n\nq, blockquote {\n  quotes: none; }\n  q:before, q:after, blockquote:before, blockquote:after {\n    content: \"\";\n    content: none; }\n\na img {\n  border: none; }\n\narticle, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {\n  display: block; }\n\n@font-face {\n  font-family: 'franklin';\n  font-style: normal;\n  font-weight: normal;\n  \n  src: url('../fonts/franklin/franklingothic-regular-webfont.woff2') format('woff2'), url('../fonts/franklin/franklingothic-regular-webfont.woff') format('woff'), url('../fonts/franklin/franklingothic-regular-webfont.ttf') format('truetype'); }\n\n@font-face {\n  font-family: 'franklin';\n  font-style: normal;\n  font-weight: bold;\n  \n  src: url('../fonts/franklin/franklingothic-bold-webfont.woff2') format('woff2'), url('../fonts/franklin/franklingothic-bold-webfont.woff') format('woff'), url('../fonts/franklin/franklingothic-bold-webfont.ttf') format('truetype'); }\n\n@font-face {\n  font-family: 'franklin';\n  font-style: italic;\n  font-weight: normal;\n  \n  src: url('../fonts/franklin/franklingothic-italic-webfont.woff2') format('woff2'), url('../fonts/franklin/franklingothic-italic-webfont.woff') format('woff'), url('../fonts/franklin/franklingothic-italic-webfont.ttf') format('truetype'); }\n\n@font-face {\n  font-family: 'franklin';\n  font-style: italic;\n  font-weight: bold;\n  \n  src: url('../fonts/franklin/franklingothic-bolditalic-webfont.woff2') format('woff2'), url('../fonts/franklin/franklingothic-bolditalic-webfont.woff') format('woff'), url('../fonts/franklin/franklingothic-bolditalic-webfont.ttf') format('truetype'); }\n\n@font-face {\n  font-family: 'rockingham';\n  font-style: normal;\n  font-weight: normal;\n  \n  src: url('../fonts/rockingham/rockingham-regular-webfont.woff2') format('woff2'), url('../fonts/rockingham/rockingham-regular-webfont.woff') format('woff'), url('../fonts/rockingham/rockingham-regular-webfont.ttf') format('truetype'); }\n\n@font-face {\n  font-family: 'rockingham';\n  font-style: normal;\n  font-weight: bold;\n  \n  src: url('../fonts/rockingham/rockingham-bold-webfont.woff2') format('woff2'), url('../fonts/rockingham/rockingham-bold-webfont.woff') format('woff'), url('../fonts/rockingham/rockingham-bold-webfont.ttf') format('truetype'); }\n\n@font-face {\n  font-family: 'rockingham';\n  font-style: italic;\n  font-weight: normal;\n  \n  src: url('../fonts/rockingham/rockingham-italic-webfont.woff2') format('woff2'), url('../fonts/rockingham/rockingham-italic-webfont.woff') format('woff'), url('../fonts/rockingham/rockingham-italic-webfont.ttf') format('truetype'); }\n\n@font-face {\n  font-family: 'rockingham';\n  font-style: italic;\n  font-weight: bold;\n  \n  src: url('../fonts/rockingham/rockingham-bolditalic-webfont.woff2') format('woff2'), url('../fonts/rockingham/rockingham-bolditalic-webfont.woff') format('woff'), url('../fonts/rockingham/rockingham-bolditalic-webfont.ttf') format('truetype'); }\n\nhtml {\n  font-family: 'rockingham', 'Helvetica Neue', Helvetica, Arial, sans-serif; }\n\n*, *:before, *:after {\n  box-sizing: border-box; }\n\nhtml {\n  font-size: 100%;\n  line-height: 1.5em;\n  background: #000;\n  color: #000; }\n\nhtml, body {\n  height: 100%; }\n\n.splash {\n  align-items: center;\n  background: url('../images/cover.jpg') no-repeat fixed right;\n  background-size: cover;\n  display: flex;\n  flex-direction: column;\n  justify-content: center; }\n  .splash body {\n    background: rgba(255, 255, 255, 0.85);\n    height: auto;\n    padding: 1rem;\n    text-align: center;\n    text-shadow: 0 1px 0 #fff; }\n  .splash h1 {\n    color: #f00;\n    font-size: 8vmin;\n    line-height: 8vmin;\n    margin: 0; }\n  .splash p {\n    margin: 0; }\n  .splash a:link, .splash a:visited {\n    color: #000;\n    font-weight: bold; }\n  .splash a:hover, .splash a:focus, .splash a:active {\n    color: #f00; }\n\n","// Reset the box model measurements.\n// @see `compass/utilities/reset`\n@mixin reset-box-model {\n  margin: 0;\n  padding: 0;\n  border: 0;\n}\n\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  @include reset-box-model;\n  font: inherit;\n  font-size: 100%;\n  vertical-align: baseline;\n}\n\n// Unlike Eric Meyer's original reset, we reset the html element to be\n// compatible with the vertical rhythm mixins.\nhtml {\n  line-height: 1;\n}\n\nol,\nul {\n  list-style: none;\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\ncaption,\nth,\ntd {\n  text-align: left;\n  font-weight: normal;\n  vertical-align: middle;\n}\n\nq,\nblockquote {\n  quotes: none;\n\n  &:before, &:after {\n    content: \"\";\n    content: none;\n  }\n}\n\na img {\n   border: none;\n}\n\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n  display: block;\n}\n","// Fontface Tools\n// ==============\n\n\n$font-formats: woff ttf !default;\n$font-path: '../fonts/' !default;\n\n\n// Font-URL [function]\n// -------------------\n@function font-url(\n  $path\n) {\n  @return url('#{$font-path}#{$path}');\n}\n\n\n// Font-Face [mixin]\n// -----------------\n@mixin font-face(\n  $font\n) {\n  $font: _parse-font($font);\n\n  @font-face {\n    font-family: map-get($font, font-family);\n    font-style: map-get($font, font-style);\n    font-weight: map-get($font, font-weight);\n\n    // IE9 compat mode (eot)\n    src: map-get($font, eot);\n\n    // IE6-IE8 (eot)\n    // Modern Browsers (woff, woff2)\n    // Safari, Android, iOS (ttf, otf)\n    // Legacy iOS (svg, svgz)\n    src: map-get($font, src);\n  }\n}\n\n\n// Name from path\n// --------------\n@function _name-from-path(\n  $path\n) {\n  @if ($path) and str-index($path, '/') {\n    $_i: str-index($path, '/');\n    $_name: str-slice($path, $_i + 1);\n    @return _name-from-path($_name);\n  } @else {\n    @return $path;\n  }\n}\n\n\n// Parse Font\n// ----------\n@function _parse-font(\n  $font\n) {\n  $_styles: italic oblique;\n  $_weights: 100 200 300 400 500 600 700 800 900 bold;\n  $_type-options: eot woff woff2 ttf otf svg svgz;\n  $_type-names: (\n    ttf: 'truetype',\n    otf: 'opentype',\n    woff: 'woff',\n    woff2: 'woff2',\n    svg: 'svg',\n    svgz: 'svg',\n    eot: 'embedded-opentype',\n  );\n\n  $_name: null;\n  $_path: null;\n  $_style: null;\n  $_weight: null;\n  $_types: ();\n  $_eot: null;\n  $_src: ();\n  $_svg-name: null;\n\n  @each $item in $font {\n    @if $item == normal {\n      $_style: $_style or normal;\n      $_weight: $_weight or normal;\n    } @else if index($_styles, $item) or index($_weights, $item) {\n      $_style: if(index($_styles, $item), $item, $_style);\n      $_weight: if(index($_weights, $item), $item, $_weight);\n    } @else if index($_type-options, $item) {\n      $_types: append($_types, $item);\n    } @else if str-index($item, '#') == 1 {\n      $_svg-name: $item;\n    } @else if $_name or str-index($item, '/') {\n      $_path: $item;\n    } @else {\n      $_name: $item;\n    }\n  }\n\n  @if $_path and not($_name) {\n    $_name: _name-from-path($_path);\n  }\n\n  $_path: $_path or $_name;\n  $_types: if(length($_types) > 0, $_types, $font-formats);\n\n  // SVG Name should come from svg file, if possible.\n  $_svg-name: $_svg-name or '#' + $_name;\n\n  // Ideally, this checks for available files in the specified location\n  // before adding them to the $_eot or $_src lists.\n  @each $type in $_types {\n    $_url: $_path + '.' + $type;\n\n    @if $type == eot {\n      $_eot: font-url($_url);\n      $_url: $_url + '?#iefix';\n    } @else if $type == svg or $type == svgz {\n      $_url: $_url + $_svg-name;\n    }\n\n    $_this: font-url($_url) format(map-get($_type-names, $type));\n    $_src: append($_src, $_this, comma);\n  }\n\n  @return (\n    font-family: quote($_name),\n    font-style: $_style,\n    font-weight: $_weight,\n    eot: $_eot,\n    src: $_src,\n  );\n}\n","// Fonts\n// =====\n\n$font-formats: 'woff2' 'woff' 'ttf';\n\n$fonts: (\n  display: (\n    name: 'franklin',\n    path: 'franklin/franklingothic-%s%s-webfont',\n    styles: (regular, bold, italic, bold italic),\n    stack: ('Helvetica Neue', Helvetica, Arial, sans-serif),\n  ),\n\n  body: (\n    name: 'rockingham',\n    path: 'rockingham/rockingham-%s%s-webfont',\n    styles: (regular, bold, italic, bold italic),\n    stack: ('Helvetica Neue', Helvetica, Arial, sans-serif),\n  ),\n);\n\n\n@mixin fonts(\n  $fonts: $fonts\n) {\n  @each $font, $detail in $fonts {\n    $name: map-get($detail, name);\n\n    @each $styles in map-get($detail, styles) {\n\n      $path-keys: if(length($styles) == 1, $styles null, $styles);\n      $path: interpolate(map-get($detail, path), $path-keys...);\n\n      $styles: if($styles == 'regular', 'normal', $styles);\n      $styles: if(length($styles) == 1, $styles normal, $styles);\n\n      @include font-face(join($name $path, $styles));\n\n    }\n\n    %#{$font} {\n      font-family: $name, map-get($detail, stack);\n    }\n  }\n}\n","// Layout Helpers\n// ==============\n\n// Clearfix\n@mixin micro-clearfix {\n  &:after {\n    clear: both;\n    content: ' ';\n    display: block;\n  }\n}\n\n\n// Box Sizing\n@mixin global-box-sizing(\n  $box: border-box,\n  $inherit: false\n) {\n  @if $inherit {\n    @at-root {\n      html {\n        box-sizing: $box;\n      }\n\n      *,\n      *:before,\n      *:after {\n        box-sizing: inherit;\n      }\n    }\n  } @else {\n    *,\n    *:before,\n    *:after {\n      box-sizing: $box;\n    }\n  }\n}\n\n\n// Reset the box model measurements.\n// @see `compass/utilities/reset`\n@mixin reset-box-model {\n  margin: 0;\n  padding: 0;\n  border: 0;\n}\n\n\n// stretch element height to specified top and bottom position\n// @see `compass/layout/stretching'\n@mixin stretch-y($offset-top:0, $offset-bottom:0) {\n  @include stretch($offset-top, false, $offset-bottom, false);\n}\n\n\n// stretch element width to specified left and right position\n// @see `compass/layout/stretching'\n@mixin stretch-x($offset-left:0, $offset-right:0) {\n  @include stretch(false, $offset-right, false, $offset-left);\n}\n\n\n// shorthand to stretch element height and width\n// @see `compass/layout/stretching'\n@mixin stretch($offset-top:0, $offset-right:0, $offset-bottom:0, $offset-left:0) {\n  position: absolute;\n  @if $offset-top { top: $offset-top; }\n  @if $offset-bottom { bottom: $offset-bottom; }\n  @if $offset-left { left: $offset-left; }\n  @if $offset-right { right: $offset-right; }\n}\n","// Base\n// ====\n\n@import 'license.config';\n@import 'requirements.config';\n@import 'colors.config';\n@import 'fonts.config';\n\n@include fonts;\n@include global-box-sizing;\n\nhtml {\n  @extend %body;\n  @include baseline;\n  background: color(text);\n  color: color(text);\n}\n\nhtml,\nbody {\n  height: 100%;\n}\n","// Scales\n// ======\n\n@import 'units';\n@import 'math';\n\n\n// Get Size\n// --------\n@function _get-size(\n  $size\n) {\n  $size: map-get($sizes, $size) or $size;\n\n  @if map-has-key($sizes, $size) {\n    $size: _get-size($size);\n  }\n\n  @return $size;\n}\n\n\n// Get Ratio\n// ---------\n@function _get-ratio(\n  $ratio: $ratio\n) {\n  $ratio: map-get($_ratio-options, $ratio) or $ratio;\n\n  @if map-has-key($_ratio-options, $ratio) {\n    $ratio: _get-ratio($ratio);\n  }\n\n  @return $ratio;\n}\n\n\n// Size\n// ----\n@function size(\n  $size,\n  $unit: $rhythm-unit\n) {\n  $size: _get-size($size);\n\n  @if type-of($size) == number {\n    @if unitless($size) {\n      $_ratio: _get-ratio($ratio);\n      @if $_ratio == 'linear' {\n        $size: $base-size * $size;\n      } @else {\n        $size: round($base-size * pow($_ratio, $size));\n      }\n    }\n\n    $size: convert-length($size, $unit);\n  }\n\n  @return $size;\n}\n\n\n// Get Lines\n// ---------\n@function _get-lines(\n  $size: normal,\n  $rhythm: rhythm\n) {\n  $font-size: size($size, px);\n  $line-height: size($rhythm, px);\n\n  @return ceil(2 * $font-size / $line-height) / 2;\n}\n\n\n// Font Size\n// ---------\n@mixin font-size(\n  $size: normal,\n  $lines: false\n) {\n  font-size: size($size);\n  line-height: if($lines, $lines, _get-lines($size)) * size(rhythm);\n}\n\n\n// Square\n// ------\n@mixin square($size) {\n  $size: size($size);\n\n  height: $size;\n  width: $size;\n}\n\n\n// Establish Baseline\n@mixin baseline(\n  $base-size: $base-size,\n  $ratio: $ratio\n) {\n  font-size: percentage($base-size / $_browser-default-font-size);\n  line-height: size(rhythm, em);\n}\n","\n.splash {\n  align-items: center;\n  background: url('../images/cover.jpg') no-repeat fixed right;\n  background-size: cover;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  body {\n    background: rgba(color('background'), .85);\n    height: auto;\n    padding: 1rem;\n    text-align: center;\n    text-shadow: 0 1px 0 color(background);\n  }\n\n  h1 {\n    color: color(alt);\n    font-size: 8vmin;\n    line-height: 8vmin;\n    margin: 0;\n  }\n\n  p {\n    margin: 0;\n  }\n\n  a {\n    &:link,\n    &:visited {\n      color: color(text);\n      font-weight: bold;\n    }\n\n    &:hover,\n    &:focus,\n    &:active {\n      color: color(alt);\n    }\n  }\n}\n\n"],"sourceRoot":"/source/"}